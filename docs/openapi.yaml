openapi: 3.0.3
info:
  title: Tasks API
  description: A simple RESTful API for managing tasks with JWT authentication
  version: 1.0.0
  contact:
    name: Tasks API Support
servers:
  - url: http://localhost:3000/api/v1
    description: Development server

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the task
        title:
          type: string
          description: Task title
        description:
          type: string
          description: Task description
        completed:
          type: boolean
          description: Whether the task is completed
      required:
        - id
        - title
        - description
        - completed
      example:
        id: "550e8400-e29b-41d4-a716-446655440000"
        title: "Complete project documentation"
        description: "Write comprehensive API documentation"
        completed: false

    CreateTaskDTO:
      type: object
      properties:
        title:
          type: string
          description: Task title
        description:
          type: string
          description: Task description (optional)
      required:
        - title
      example:
        title: "New task"
        description: "Task description"

    UpdateTaskDTO:
      type: object
      properties:
        title:
          type: string
          description: Task title
        description:
          type: string
          description: Task description
        completed:
          type: boolean
          description: Whether the task is completed
      example:
        title: "Updated task title"
        completed: true

    LoginDTO:
      type: object
      properties:
        username:
          type: string
          description: Username for authentication
        password:
          type: string
          format: password
          description: Password for authentication
      required:
        - username
        - password
      example:
        username: "admin"
        password: "password123"

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token for authentication
      required:
        - token
      example:
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error
      example:
        error: "Resource not found"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /auth/login

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and receive JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request - missing username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: Retrieve a list of all tasks
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Tasks
      summary: Create a new task
      description: Create a new task with title and optional description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDTO'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Task ID
        schema:
          type: string
          format: uuid

    get:
      tags:
        - Tasks
      summary: Get task by ID
      description: Retrieve a specific task by its ID
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Tasks
      summary: Update task
      description: Update an existing task by its ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskDTO'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Tasks
      summary: Delete task
      description: Delete an existing task by its ID
      responses:
        '204':
          description: Task deleted successfully
        '401':
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
